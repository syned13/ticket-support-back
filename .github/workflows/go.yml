name: Go

on:
  push:
    branches: [ '**']
  pull_request:
    branches: [ main ]

jobs:
  imports:
    name: Imports
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: imports
        token: ${{ secrets.GITHUB_TOKEN }}

  errcheck:
    name: Errcheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: errcheck
        token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: lint
        token: ${{ secrets.GITHUB_TOKEN }}

  shadow:
    name: Shadow
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: shadow
        token: ${{ secrets.GITHUB_TOKEN }}

  staticcheck:
    name: StaticCheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: staticcheck
        token: ${{ secrets.GITHUB_TOKEN }}

  sec:
    name: Sec
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: check
      uses: grandcolline/golang-github-actions@v1.1.0
      with:
        run: sec
        token: ${{ secrets.GITHUB_TOKEN }}
        flags: "-exclude=G104"
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: |
          cd ${HOME}
          mkdir -p go/{src,bin}
          mkdir -p go/src/github.com/syned13
          cp -R work/ticket-support-back/ticket-support-back go/src/github.com/syned13
          echo $(pwd) 
          echo $(ls)
          cd go/src/github.com/syned13/ticket-support-back
          go test ./...
  coverage:
    name: Code coverage sec
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check coverage
        run: |
          cd ${HOME}
          mkdir -p go/{src,bin}
          mkdir -p go/src/github.com/syned13
          cp -R work/ticket-support-back/ticket-support-back go/src/github.com/syned13
          echo $(pwd) 
          echo $(ls)
          cd go/src/github.com/syned13/ticket-support-back
          export GO111MODULE=on
          echo $GOROOT
          go get github.com/cvgw/gocheckcov
          gocheckcov check --skip-dirs cmd --minimum-coverage 0 ./...